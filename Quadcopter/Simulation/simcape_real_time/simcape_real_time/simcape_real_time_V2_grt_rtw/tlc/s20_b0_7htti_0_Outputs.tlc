%implements s20_b0_7htti_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl

real_T X_tmp;
real_T X_tmp_0;
real_T a3;
real_T a4;
real_T a5;
real_T tf;
%closefile localVarDecl
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(0,2,5,0)
%<SLibCG_AccessArg(0 ,2, 5)>
%endif
%if SLibCG_FcnCallArgAccessed(0,2,5,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(0,2,4,0)
%<SLibCG_AccessArg(0 ,2, 5)>
%endif
%if SLibCG_FcnCallArgAccessed(0,2,4,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(0,2,3,0)
%<SLibCG_AccessArg(0 ,2, 5)>
%endif
%if SLibCG_FcnCallArgAccessed(0,2,3,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(0,2,2,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(0,2,1,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(0,2,0,2)
%<SLibCG_AccessArg(0 ,2, 0)>
%endif

tf = rtu_qf / rtu_v_qd;
a5 = tf * tf * 0.0;
a3 = -(((((20.0 * rtu_q0 - 20.0 * rtu_qf) + 0.0 * tf) + 0.0 * tf) + a5) - a5) / (2.0 * %<(SLibCGCallSubFcn("rt_powd_snf", ["tf", "3.0", "%<::tSimStruct>"], 0, 2, 0))>);
a4 = (((((30.0 * rtu_q0 - 30.0 * rtu_qf) + 0.0 * tf) + 0.0 * tf) + a5) - a5) / (2.0 * %<(SLibCGCallSubFcn("rt_powd_snf", ["tf", "4.0", "%<::tSimStruct>"], 0, 2, 1))>);
a5 = -(((((12.0 * rtu_q0 - 12.0 * rtu_qf) + 0.0 * tf) + 0.0 * tf) + a5) - a5) / (2.0 * %<(SLibCGCallSubFcn("rt_powd_snf", ["tf", "5.0", "%<::tSimStruct>"], 0, 2, 2))>);
localDW->t += 0.002;
if (localDW->t > tf) {
    localDW->t = tf;
}
tf = %<(SLibCGCallSubFcn("rt_powd_snf", ["localDW->t", "3.0", "%<::tSimStruct>"], 0, 2, 4))>;
X_tmp = %<(SLibCGCallSubFcn("rt_powd_snf", ["localDW->t", "4.0", "%<::tSimStruct>"], 0, 2, 5))>;
X_tmp_0 = localDW->t * localDW->t;
localB->X = ((((0.0 * localDW->t + rtu_q0) + X_tmp_0 * 0.0) + a3 * tf) + a4 * X_tmp) + a5 * %<(SLibCGCallSubFcn("rt_powd_snf", ["localDW->t", "5.0", "%<::tSimStruct>"], 0, 2, 3))>;
localB->V = ((3.0 * a3 * X_tmp_0 + 0.0 * localDW->t) + 4.0 * a4 * tf) + 5.0 * a5 * X_tmp;
localB->A = (6.0 * a3 * localDW->t + 12.0 * a4 * X_tmp_0) + 20.0 * a5 * tf;
if (rtu_qf == 0.0) {
    localB->X = 0.0;
    localB->V = 0.0;
    localB->A = 0.0;
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[0].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(0, 2, 0)>
%endif
%if SLibCG_ArgAccessed(0, 2, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(0, 2, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void simcape_real_t_MATLABFunction10(\
%assign comma = ""
%if SLibCG_ArgAccessed(0, 2, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("simcape_real_t_MATLABFunction10", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_q0\
%assign comma = ", "
%<comma>real_T rtu_qf\
%assign comma = ", "
%<comma>real_T rtu_v_qd\
%assign comma = ", "
%<comma>B_MATLABFunction10_simcape_re_T *localB\
%assign comma = ", "
%<comma>DW_MATLABFunction10_simcape_r_T *localDW\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 2, fcnProtoType)>
%endfunction
